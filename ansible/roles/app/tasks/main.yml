---
# install app
- name: check app has checked out.
  stat: path={{ app.dir }}
  register: app_dir
  sudo: no

- name: check out app
  git: repo={{ app.repo }} dest={{ app.dir }} accept_hostkey=yes
  when: app_dir.stat.exists == False or app_dir.stat.isdir == False
  sudo: no

# - name: make bundle config
#   command: bash -lc "mkdir ~/.bundle; touch ~/.bundle/config;"
#   sudo: no

- name: make bundle config
  file: >
    path='~/.bundle/config'
    mode=0755
    state=touch
  sudo: no

- name: set BUNDLE_PATH
  lineinfile: >-
    dest='~/.bundle/config'
    state=present
    regexp='^BUNDLE_PATH'
    line='BUNDLE_PATH:./vendor/bundle'
  sudo: no

- name: create app synbolic link
  file: >
    src={{ app.src }}
    dest={{ app.dest }}
    mode=0755
    state=link
  sudo: no

- name: check has bundle installed
  stat: path=~/app/vendor/bundle
  register: bundle_dir
  sudo: no

- name: setting for intalling nokogiri properly
  command: bash -lc "cd ~/app/; bundle config build.nokogiri --use-system-libraries;"
  when: bundle_dir.stat.exists == False or bundle_dir.stat.isdir == False
  sudo: no

- name: initial bundle install
  command: bash -lc "cd ~/app/; bundle install;"
  when: bundle_dir.stat.exists == False or bundle_dir.stat.isdir == False
  sudo: no

- name: create db
  command: bash -lc "cd ~/app/; bundle exec rake db:create --trace;"
  when: bundle_dir.stat.exists == False or bundle_dir.stat.isdir == False
  sudo: no

- name: init rspec
  command: bash -lc "cd ~/app/; bundle exec rake db:test:prepare;"
  when: bundle_dir.stat.exists == False or bundle_dir.stat.isdir == False
  sudo: no
